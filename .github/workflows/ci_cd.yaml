name: CI / CD

on:
  push:
  pull_request:

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jagfx/lafony-php:ci
    steps:
      -   name: Checkout repository
          uses: actions/checkout@v3
          with:
            fetch-depth: 2
      -   name: Read .nvmrc
          run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
          id: nvm
      -   name: Use Node.js (.nvmrc)
          uses: actions/setup-node@v1
          with:
            node-version: "${{ steps.nvm.outputs.NVMRC }}"
      -   name: Install composer dependencies
          run: composer install
      -   name: Install nodejs dependencies
          run: npm i
      -   name: Cache dependencies
          uses: actions/cache@v3
          id: restore-build
          with:
            path: ./*
            key: ${{ github.sha }}

  linter:
    name: Linter
    runs-on: ubuntu-latest
    needs: [install]
    container:
      image: ghcr.io/jagfx/lafony-php:ci
    steps:
      -   name: Checkout repository
          uses: actions/checkout@v3
          with:
            fetch-depth: 2
      -   uses: actions/cache@v3
          id: restore-build
          with:
            path: ./*
            key: ${{ github.sha }}
      -   name: Run Laravel pint
          run: php vendor/bin/pint -v
      -   name: Run PHPStan
          run: php vendor/bin/phpstan analyse
      -   name: Run Rector
          run: php vendor/bin/rector process --xdebug

  test_unit:
    name: Unit test
    runs-on: ubuntu-latest
    needs: [install]
    container:
      image: ghcr.io/jagfx/lafony-php:ci
    steps:
      -   name: Checkout repository
          uses: actions/checkout@v3
          with:
            fetch-depth: 2
      -   uses: actions/cache@v3
          id: restore-build
          with:
            path: ./*
            key: ${{ github.sha }}
      -   name: Run unit test
          run: php vendor/bin/phpunit tests/Unit

  test_functional:
    name: Functional test
    runs-on: ubuntu-latest
    needs: [ install ]
    container:
      image: ghcr.io/jagfx/lafony-php:ci
    services:
      db:
        image: ghcr.io/jagfx/lafony-mysql:ci
        env:
          MYSQL_ROOT_PASSWORD: noPassword
          MYSQL_DATABASE: lafony_test
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Wipe test database
        run: php artisan db:wipe --env=test
      - name: Run migration into test database
        run: php artisan migrate --env=test
      - name: Run functional test
        run: php vendor/bin/phpunit tests/Feature

#  TODO: Continue here: Setup run for TU
# > https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers